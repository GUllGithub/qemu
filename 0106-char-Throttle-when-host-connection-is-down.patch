commit b89fc871caabe2fc40db5815a828179a358d724b
Author: Miroslav Rezanina <mrezanin@redhat.com>
Date:   Mon Mar 4 09:10:57 2013 +0100

    char: Throttle when host connection is down
    
    Message-id: <c2ddb156db52808a89d91edf5bb1449f226d3ecd.1354903384.git.crobinso@redhat.com>
    Bugzilla: 621484
    
    When the host-side connection goes down, throttle the virtio-serial bus
    and later unthrottle when a connection gets established.  This helps
    prevent any lost IO (guest->host) while the host connection was down.
    
    This commit actually helps the bug mentioned above as no writes will now
    get lost because of the throttling done here.  With just the patches
    sent earlier for that bug, one write will end up getting lost in the
    worst case (host d/c, guest write, host connect).
    
    Signed-off-by: Amit Shah <amit.shah@redhat.com>
    Signed-off-by: Cole Robinson <crobinso@redhat.com>

diff --git a/qemu-char.c b/qemu-char.c
index a5cdc9d..52ddc16 100644
--- a/qemu-char.c
+++ b/qemu-char.c
@@ -139,6 +139,9 @@ static void qemu_chr_fire_open_event(void *opaque)
 {
     CharDriverState *s = opaque;
     qemu_chr_be_event(s, CHR_EVENT_OPENED);
+    if (s->write_blocked) {
+        char_write_unblocked(s);
+    }
     qemu_free_timer(s->open_timer);
     s->open_timer = NULL;
 }
@@ -2258,6 +2261,17 @@ static int tcp_chr_write(CharDriverState *chr, const uint8_t *buf, int len)
         ret = send_all(chr, s->fd, buf, len);
         if (ret == -1 && errno == EPIPE) {
             tcp_closed(chr);
+
+            if (chr->chr_enable_write_fd_handler && chr->chr_write_unblocked) {
+                /*
+                 * Since we haven't written out anything, let's say
+                 * we're throttled.  This will prevent any output from
+                 * the guest getting lost if host-side chardev goes
+                 * down.  Unthrottle when we re-connect.
+                 */
+                chr->write_blocked = true;
+                return 0;
+            }
         }
         return ret;
     } else {
